@model TrashCollector.Models.Customer

@{
    ViewData["Title"] = "PickupsByDay";
}

<h1>PickupsByDay</h1>

<div>
    <h4>Customer</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.WeeklyPickupDay)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.WeeklyPickupDay)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.ExtraOneTimePickup)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.ExtraOneTimePickup)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.StreetAddress)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.StreetAddress)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.City)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.City)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.State)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.State)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.ZipCode)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.ZipCode)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.StartDate)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.StartDate)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.EndDate)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.EndDate)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Balance)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Balance)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.PickupStatus)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.PickupStatus)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.IdentityUser)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.IdentityUser.Id)
        </dd>
    </dl>
    <d2 class="row">
        <html>
        <head>
            <title>Simple Map</title>
            <meta name="viewport" content="initial-scale=1.0">
            <meta charset="utf-8">
            <style>
                         /* Always set the map height explicitly to define the size of the div
                * element that contains the map. */
                         #map {
                             height: 100%;
                         }
                         /* Optional: Makes the sample page fill the window. */
                         html, body {
                             height: 100%;
                             margin: 0;
                             padding: 0;
                         }
            </style>
        </head>
        <body>
            <div id="map"></div>
            <script>
      var map;
      function initMap() {
        map = new google.maps.Map(document.getElementById('map'), {
          center: {lat: -34.397, lng: 150.644},
          zoom: 8
        });
      }
            </script>
            <script src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&callback=initMap"
                    async defer></script>
        </body>
        </html>

    </d2>
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model.CustomerId">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>
